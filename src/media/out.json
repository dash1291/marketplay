{"api_list": [{"api_name": "abuse", "endpoints": [{"url": "/api/v1/abuse/app/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "text", "desc": "a textual description of the abuse"}, {"type": "int|string", "optional": false, "name": "app", "desc": "the app id or slug of the app being reported"}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/abuse/user/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "text", "desc": "a textual description of the abuse"}, {"type": "int", "optional": false, "name": "user", "desc": "the primary key of the user being reported"}]}, "method": "post", "response": {"params": []}}]}, {"api_name": "accounts", "endpoints": [{"url": "/api/v1/account/settings/mine/", "url_args": [], "method": "get", "response": {"params": []}}, {"url": "/api/v1/account/settings/mine/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "display_name", "desc": "the displayed name for this user."}]}, "method": "patch", "response": {"params": []}}, {"url": "/api/v1/account/installed/mine/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`apps <app-response-label>`."}]}}, {"url": "/api/v1/account/permissions/mine/", "url_args": [], "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "permissions", "desc": "permissions and properties for the user account. It"}]}}, {"url": "/api/v1/account/feedback/", "notes": "This endpoint is rate-limited at 30 requests per hour per user.", "request": {"params": [{"type": "string", "optional": false, "name": "chromeless", "desc": "(optional) \"Yes\" or \"No\", indicating whether the user"}, {"type": "string", "optional": false, "name": "feedback", "desc": "(required) the text of the feedback."}, {"type": "string", "optional": false, "name": "from_url", "desc": "(optional) the URL from which the feedback was sent."}, {"type": "string", "optional": false, "name": "platform", "desc": "(optional) a description of the platform from which the"}]}, "response": {"params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/account/newsletter/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "email", "desc": "The email address to send newsletters to."}]}, "method": "post", "response": {"params": []}}]}, {"api_name": "apps", "endpoints": [{"url": "/api/v1/apps/app/", "notes": "Requires authentication.", "request": {"params": []}, "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`apps <app-response-label>`."}]}, "url_args": [], "method": "get"}, {"url": "/api/v1/apps/app/(int:id)|(string:slug)/", "url_args": [{"type": "int|string", "name": "id|slug"}], "notes": "Does not require authentication if your app is public.", "method": "get", "response": {"params": [{"type": "boolean", "optional": false, "name": "payment_required", "desc": "A payment is required for this app. It"}, {"type": "string", "optional": false, "name": "premium_type", "desc": "one of ``free``, ``premium``, ``free-inapp``,"}, {"type": "string|null", "optional": false, "name": "price", "desc": "If it is a paid app this will be a string representing"}, {"type": "string|null", "optional": false, "name": "price_locale", "desc": "If it is a paid app this will be a string representing"}, {"type": "string", "optional": false, "name": "privacy_policy", "desc": "The path to the privacy policy resource."}, {"type": "boolean", "optional": false, "name": "regions.adolescent", "desc": "an adolescent region has a sufficient"}, {"type": "string|null", "optional": false, "name": "regions.mcc", "desc": "represents the region's ITU `mobile"}, {"type": "list|null", "optional": false, "name": "required_features", "desc": "a list of device features required by"}, {"optional": false, "name": "upsold", "desc": "The path to the free app resource that"}, {"type": "object", "optional": false, "name": "user", "desc": "an object representing information specific to this"}, {"type": "boolean", "optional": false, "name": "user.developed", "desc": "true if the user is a developer of the app."}, {"type": "boolean", "optional": false, "name": "user.installed", "desc": "true if the user installed the app (this"}, {"type": "boolean", "optional": false, "name": "user.purchased", "desc": "true if the user has purchased the app from"}]}}, {"url": "/api/v1/apps/(int:id)|(string:slug)/privacy/", "url_args": [{"type": "int|string", "name": "id|slug"}], "method": "get", "response": {"params": [{"type": "string", "optional": false, "name": "privacy_policy", "desc": "The text of the app's privacy policy."}]}}, {"url": "/api/v1/apps/app/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "Requires authentication.", "method": "delete", "response": {"params": []}}, {"url": "/api/v1/apps/app/", "url_args": [], "method": "post"}, {"url": "/api/v1/apps/app/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "put"}, {"url": "/api/v1/apps/versions/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": [{"type": "boolean", "optional": false, "name": "is_current_version", "desc": "indicates whether this is the most recent"}, {"type": "array", "optional": false, "name": "features", "desc": "each item represents a"}]}}, {"url": "/api/v1/apps/versions/(int:id)/", "notes": "Requires authentication and a successfully created app.", "request": {"params": [{"type": "array", "optional": false, "name": "features", "desc": "each item represents a"}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "patch"}, {"url": "/api/v1/apps/app/(int:id)/payments/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": [{"type": "string", "optional": false, "name": "upsell", "desc": "URL to the :ref:`upsell of the app <upsell-response-label>`."}, {"type": "string", "optional": false, "name": "account", "desc": "URL to the :ref:`app payment account <payment-account-response-label>`."}]}}, {"url": "/api/v1/apps/app/(int:id)/payments/status/", "notes": "The Transaction:Debug permission is required.", "request": {"params": []}, "response": {"params": [{"type": "string", "optional": false, "name": "status", "desc": "`passed` or `failed`."}, {"type": "array of strings.", "optional": false, "name": "errors", "desc": "an array of errors as string. Currently empty, reserved for"}]}, "url_args": [{"type": "int", "name": "id"}], "method": "post"}, {"url": "/api/v1/apps/api/(int:id)/payments/debug/", "url_args": [{"type": "int", "name": "id"}], "notes": "Requires authentication and a successfully created hosted app.", "method": "get", "response": {"params": []}}, {"url": "/api/v1/apps/app/(int:id|string:slug)/refresh-manifest/", "url_args": [{"type": "int|string", "name": "id|slug"}], "method": "post", "response": {"params": []}}]}, {"api_name": "authentication", "endpoints": [{"url": "/api/v1/account/login/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "assertion", "desc": "the Persona assertion."}, {"type": "string", "optional": false, "name": "audience", "desc": "the Persona audience."}]}, "method": "post", "response": {"params": [{"type": "string", "optional": false, "name": "error", "desc": "any error that occurred."}, {"type": "string", "optional": false, "name": "token", "desc": "a shared secret to be used on later requests. It should be"}, {"type": "object", "optional": false, "name": "permissions", "desc": ":ref:`user permissions <permission-get-label>`."}, {"type": "object", "optional": false, "name": "settings", "desc": "user account settings."}]}}]}, {"api_name": "comm", "endpoints": [{"url": "/api/v1/comm/thread/", "notes": "Requires authentication.", "request": {"params": [{"type": "int|string", "optional": false, "name": "app", "desc": "id or slug of the app to filter the threads by."}]}, "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`threads <thread-response-label>`."}]}, "url_args": [], "method": "get"}, {"url": "/api/v1/comm/thread/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "Does not require authentication if the thread is public.", "method": "get", "response": {"params": [{"type": "array", "optional": false, "name": "recent_notes", "desc": "contain 5 recently created notes."}]}}, {"url": "/api/v1/comm/thread/(int:thread_id)/", "notes": "Requires authentication.", "request": {"params": [{"type": "boolean", "optional": false, "name": "is_read", "desc": "set it to `true` to mark the note as read."}]}, "response": {"status": {"code": "400"}, "params": []}, "url_args": [{"type": "int", "name": "thread_id"}], "method": "patch"}, {"url": "/api/v1/comm/thread/", "notes": "Requires authentication.", "request": {"params": [{"type": "int", "optional": false, "name": "addon", "desc": "the id of the addon."}, {"type": "int", "optional": false, "name": "version", "desc": "the id of the version of the addon."}]}, "response": {"status": {"code": "201"}, "params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/comm/thread/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "Requires authentication.", "method": "delete", "response": {"status": {"code": "204"}, "params": []}}, {"url": "/api/v1/comm/thread/(int:thread_id)/note/", "notes": "Does not require authentication if the thread is public.", "request": {"params": [{"type": "boolean", "optional": false, "name": "show_read", "desc": "Filter notes by read status. Pass `true` to list read notes and `false` for unread notes."}]}, "response": {"params": [{"optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`notes <note-response-label>`."}]}, "url_args": [{"type": "int", "name": "thread_id"}], "method": "get"}, {"url": "/api/v1/comm/thread/(int:thread_id)/note/(int:id)/", "notes": "Does not require authentication if the note is in a public thread.", "request": {"params": []}, "response": {"params": [{"type": "int", "optional": false, "name": "note_type", "desc": "type of action taken with the note."}, {"type": "boolean", "optional": false, "name": "is_read", "desc": "Whether the note is read or unread."}]}, "url_args": [{"type": "int", "name": "thread_id"}, {"type": "int", "name": "id"}], "method": "get"}, {"url": "/api/v1/comm/thread/(int:thread_id)/note/(int:id)/", "notes": "Requires authentication.", "request": {"params": [{"type": "boolean", "optional": false, "name": "is_read", "desc": "set it to `true` to mark the note as read."}]}, "response": {"status": {"code": "400"}, "params": []}, "url_args": [{"type": "int", "name": "thread_id"}, {"type": "int", "name": "id"}], "method": "patch"}, {"url": "/api/v1/comm/thread/(int:thread_id)/note/", "notes": "Requires authentication.", "request": {"params": [{"type": "int", "optional": false, "name": "author", "desc": "the id of the addon."}, {"type": "int", "optional": false, "name": "thread", "desc": "the id of the thread to post to."}, {"type": "int", "optional": false, "name": "note_type", "desc": "the type of note to create. See :ref:`supported types <note-type-label>`."}, {"type": "string", "optional": false, "name": "body", "desc": "the comment text to be attached with the note."}]}, "response": {"status": {"code": "201"}, "params": []}, "url_args": [{"type": "int", "name": "thread_id"}], "method": "post"}, {"url": "/api/v1/comm/thread/(int:thread_id)/note/(int:id)/", "url_args": [{"type": "int", "name": "thread_id"}, {"type": "int", "name": "id"}], "notes": "Requires authentication.", "method": "delete", "response": {"status": {"code": "204"}, "params": []}}]}, {"api_name": "export", "endpoints": []}, {"api_name": "features", "endpoints": [{"url": "/api/v1/apps/features/", "url_args": [], "method": "get", "response": {"params": []}}]}, {"api_name": "fireplace", "endpoints": [{"url": "/api/v1/fireplace/app/", "url_args": [], "method": "get"}, {"url": "/api/v1/fireplace/report_error", "url_args": [], "request": {"params": []}, "method": "post", "response": {"params": []}}]}, {"api_name": "overview", "endpoints": []}, {"api_name": "payment", "endpoints": [{"url": "/api/v1/payments/account/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "account_name", "desc": "Account name."}, {"type": "string", "optional": false, "name": "companyName", "desc": "Company name."}, {"type": "string", "optional": false, "name": "vendorName", "desc": "Vendor name."}, {"type": "string", "optional": false, "name": "financeEmailAddress", "desc": "Financial email."}, {"type": "string", "optional": false, "name": "supportEmailAddress", "desc": "Support email."}, {"type": "string", "optional": false, "name": "address1", "desc": "Address."}, {"type": "string", "optional": false, "name": "address2", "desc": "Second line of address."}, {"type": "string", "optional": false, "name": "addressCity", "desc": "City/municipality."}, {"type": "string", "optional": false, "name": "addressState", "desc": "State/province/region."}, {"type": "string", "optional": false, "name": "addressZipCode", "desc": "Zip/postal code."}, {"type": "string", "optional": false, "name": "countryIso", "desc": "Country."}, {"type": "string", "optional": false, "name": "vatNumber", "desc": "VAT number."}, {"type": "string", "optional": false, "name": "bankAccountPayeeName", "desc": "Account holder name."}, {"type": "string", "optional": false, "name": "bankAccountNumber", "desc": "Bank account number."}, {"type": "string", "optional": false, "name": "bankAccountCode", "desc": "Bank account code."}, {"optional": false, "name": "bankName", "desc": "Bank name."}, {"type": "string", "optional": false, "name": "bankAddress1", "desc": "Bank address."}, {"type": "string", "optional": false, "name": "bankAddress2", "desc": "Second line of bank address."}, {"type": "string", "optional": false, "name": "bankAddressState", "desc": "Bank state/province/region."}, {"type": "string", "optional": false, "name": "bankAddressZipCode", "desc": "Bank zip/postal code."}, {"type": "string", "optional": false, "name": "bankAddressIso", "desc": "Bank country."}, {"type": "string", "optional": false, "name": "adminEmailAddress", "desc": "Administrative email."}, {"type": "string", "optional": false, "name": "currencyIso", "desc": "Currency you prefer to be paid in."}]}, "method": "post", "response": {"status": {"code": "201"}, "params": []}}, {"url": "/api/v1/payments/account/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "request": {"params": [{"type": "string", "optional": false, "name": "account_name", "desc": "Account name."}, {"type": "string", "optional": false, "name": "companyName", "desc": "Company name."}, {"type": "string", "optional": false, "name": "vendorName", "desc": "Vendor name."}, {"type": "string", "optional": false, "name": "financeEmailAddress", "desc": "Financial email."}, {"type": "string", "optional": false, "name": "supportEmailAddress", "desc": "Support email."}, {"type": "string", "optional": false, "name": "address1", "desc": "Address."}, {"type": "string", "optional": false, "name": "address2", "desc": "Second line of address."}, {"type": "string", "optional": false, "name": "addressCity", "desc": "City/municipality."}, {"type": "string", "optional": false, "name": "addressState", "desc": "State/province/region."}, {"type": "string", "optional": false, "name": "addressZipCode", "desc": "Zip/postal code."}, {"type": "string", "optional": false, "name": "countryIso", "desc": "Country."}, {"type": "string", "optional": false, "name": "vatNumber", "desc": "VAT number."}]}, "method": "put", "response": {"params": []}}, {"url": "/api/v1/payments/account/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "delete", "response": {"params": []}}, {"url": "/api/v1/payments/account/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`accounts <payment-account-response-label>`."}]}}, {"url": "/api/v1/payments/account/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": []}}, {"url": "/api/v1/payments/upsell/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "free", "desc": "URL to the free app."}, {"type": "string", "optional": false, "name": "premium", "desc": "URL to the premium app."}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/payments/upsell/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": [{"type": "string", "optional": false, "name": "free", "desc": "URL to the free app."}, {"type": "string", "optional": false, "name": "premium", "desc": "URL to the premium app."}]}}, {"url": "/api/v1/payments/upsell/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "request": {"params": [{"type": "string", "optional": false, "name": "free", "desc": "URL to the free app."}, {"type": "string", "optional": false, "name": "premium", "desc": "URL to the premium app."}]}, "method": "patch", "response": {"params": []}}, {"url": "/api/v1/payments/upsell/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "delete", "response": {"params": []}}, {"url": "/api/v1/payments/app/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "app", "desc": "URL to the premium app."}, {"type": "string", "optional": false, "name": "account", "desc": "URL to the account."}]}, "method": "post", "response": {"params": [{"type": "string", "optional": false, "name": "app", "desc": "URL to the premium app."}, {"type": "string", "optional": false, "name": "account", "desc": "URL to the account."}]}}, {"url": "/api/v1/payments/app/(int:id)/", "notes": "Authentication is required.", "request": {"params": [{"type": "string", "optional": false, "name": "app", "desc": "URL to the premium app. Must be unchanged."}, {"type": "string", "optional": false, "name": "account", "desc": "URL to the account."}]}, "response": {"params": [{"type": "string", "optional": false, "name": "app", "desc": "URL to the premium app."}, {"type": "string", "optional": false, "name": "account", "desc": "URL to the account."}]}, "url_args": [{"type": "int", "name": "id"}], "method": "patch"}, {"url": "/api/v1/webpay/prepare/", "notes": "Authentication is required.", "request": {"params": [{"optional": false, "name": "string app", "desc": "the id or slug of the app to be purchased."}]}, "response": {"params": [{"type": "string", "optional": false, "name": "webpayJWT", "desc": "the JWT to pass to `navigator.mozPay`_"}, {"type": "string", "optional": false, "name": "contribStatusURL", "desc": "the URL to poll for"}]}, "url_args": [], "method": "post"}, {"url": "/api/v1/webpay/status/(string:uuid)/", "url_args": [{"type": "string", "name": "uuid"}], "request": {"params": [{"type": "string", "optional": false, "name": "uuid", "desc": "the uuid of the payment. This URL is returned as the"}]}, "method": "get", "response": {"params": [{"type": "string", "optional": false, "name": "status", "desc": "``complete`` or ``incomplete``"}]}}, {"url": "/api/v1/installs/record/", "url_args": [], "request": {"params": [{"type": "int|string", "optional": false, "name": "app", "desc": "the id or slug of the app being installed."}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/receipts/install/", "url_args": [], "request": {"params": [{"type": "int|string", "optional": false, "name": "app", "desc": "the id or slug of the app being installed."}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/receipts/test/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "manifest_url", "desc": "the fully qualified URL to the manifest, including"}, {"type": "string", "optional": false, "name": "receipt_type", "desc": "one of ``ok``, ``expired``, ``invalid`` or ``refunded``."}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/receipts/reissue/", "url_args": [], "method": "post", "response": {"params": [{"type": "string", "optional": false, "name": "receipt", "desc": "the receipt, currently blank."}, {"type": "string", "optional": false, "name": "status", "desc": "one of ``not-implemented``."}]}}, {"url": "/api/v1/webpay/prices/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "provider", "desc": "(optional) the payment provider. Current values: *bango*"}]}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`apps <pay-tier-response-label>`."}]}}, {"url": "/api/v1/webpay/prices/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "All write requests (``POST``, ``PATCH``) require authenticated users to have the", "method": "get", "response": {"params": [{"type": "int", "optional": false, "name": "region", "desc": "a :ref:`region <region-response-label>`."}, {"type": "int", "optional": false, "name": "carrier", "desc": "a :ref:`carrier <carrier-response-label>`."}, {"type": "object", "optional": false, "name": "localized", "desc": "see `Localized tier`."}, {"type": "int", "optional": false, "name": "tier", "desc": "the id of the tier."}, {"type": "int", "optional": false, "name": "method", "desc": "the payment method."}, {"type": "int", "optional": false, "name": "provider", "desc": "payment provider, currently only ``1`` is supported."}, {"type": "string", "optional": false, "name": "pricePoint", "desc": "this is the value used for in-app payments."}]}}, {"url": "/api/v1/webpay/product/icon/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "ext_url", "desc": "Absolute external URL of product icon that was cached."}, {"type": "int", "optional": false, "name": "ext_size", "desc": "Height and width pixel value that was declared for this icon."}, {"optional": false, "name": "size", "desc": "Height and width pixel value that this icon was resized to."}]}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`product icons <product-icon-response-label>`."}]}}, {"url": "/api/v1/webpay/product/icon/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": [{"type": "string", "optional": false, "name": "url", "desc": "Absolute URL of the cached product icon."}]}}, {"url": "/api/v1/webpay/product/icon/", "notes": "Requires authenticated users to have the Transaction:NotifyFailure", "request": {"params": [{"type": "string", "optional": false, "name": "ext_url", "desc": "Absolute external URL of product icon that should be cached."}, {"type": "int", "optional": false, "name": "ext_size", "desc": "Height and width pixel value that was declared for this icon."}, {"type": "int", "optional": false, "name": "size", "desc": "Height and width pixel value that this icon should be resized to."}]}, "response": {"params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/webpay/failure/(int:transaction_id)/", "url_args": [{"type": "int", "name": "transaction_id"}], "method": "patch", "response": {"params": []}}]}, {"api_name": "ratings", "endpoints": [{"url": "/api/v1/apps/rating/", "notes": "Authentication is optional.", "request": {"params": []}, "response": {"params": [{"type": "boolean", "optional": false, "name": "is_author", "desc": "whether the authenticated user is the author of the rating."}]}, "url_args": [], "method": "get"}, {"url": "/api/v1/apps/rating/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "Authentication is optional.", "method": "get", "response": {"params": [{"type": "boolean", "optional": false, "name": "is_author", "desc": "whether the authenticated user is the author of the rating."}]}}, {"url": "/api/v1/apps/rating/", "notes": "Authentication required.", "request": {"params": [{"type": "int", "optional": false, "name": "app", "desc": "the ID of the app being reviewed"}, {"type": "string", "optional": false, "name": "body", "desc": "text of the rating"}, {"type": "int", "optional": false, "name": "rating", "desc": "an integer between (and inclusive of) 1 and 5, indicating the"}]}, "response": {"params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/apps/rating/(int:rating_id)/", "notes": "Authentication required.", "request": {"params": [{"type": "string", "optional": false, "name": "body", "desc": "text of the rating"}, {"type": "int", "optional": false, "name": "rating", "desc": "an integer between (and inclusive of) 1 and 5, indicating the"}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "rating_id"}], "method": "put"}, {"url": "/api/v1/apps/rating/(int:rating_id)/", "url_args": [{"type": "int", "name": "rating_id"}], "notes": "Authentication required.", "method": "delete", "response": {"params": []}}, {"url": "/api/v1/apps/rating/(int:rating_id)/flag/", "url_args": [{"type": "int", "name": "rating_id"}], "notes": "Authentication required.", "request": {"params": []}, "method": "post"}]}, {"api_name": "reviewers", "endpoints": [{"url": " /api/v1/reviewers/search/", "url_args": [], "notes": "Requires authentication and permission to review apps.", "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`apps <reviewers-app-response-label>`."}, {"type": "array", "optional": false, "name": "device_types", "desc": "a list of the device types at least one of:"}, {"type": "int", "optional": false, "name": "id", "desc": "the app's id."}, {"type": "boolean", "optional": false, "name": "is_escalated", "desc": "a boolean indicating whether this app is currently"}, {"type": "boolean", "optional": false, "name": "is_packaged", "desc": "a boolean indicating whether the app is packaged or"}, {"type": "object", "optional": false, "name": "latest_version", "desc": "an array containing the following information about"}, {"type": "boolean", "optional": false, "name": "latest_version.has_editor_comment", "desc": "a boolean indicathing whether"}, {"type": "boolean", "optional": false, "name": "latest_version.has_info_request", "desc": "a boolean indicathing whether that"}, {"type": "boolean", "optional": false, "name": "latest_version.is_privileged", "desc": "a boolean indicating whether this"}, {"type": "int", "optional": false, "name": "latest_version.status", "desc": "an int representing the version status. Can"}, {"type": "string", "optional": false, "name": "name", "desc": "the name of the app"}, {"type": "string", "optional": false, "name": "premium_type", "desc": "one of ``free``, ``premium``, ``free-inapp``,"}, {"type": "string|null", "optional": false, "name": "price", "desc": "If it is a paid app this will be a string representing"}, {"type": "string", "optional": false, "name": "name", "desc": "the URL slug for the app"}, {"optional": false, "name": "status", "desc": "an int representing the version status."}]}}, {"url": " /api/v1/reviewers/reviewing/", "url_args": [], "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`apps <app-response-label>`."}]}}]}, {"api_name": "rocketfuel", "endpoints": [{"url": "/api/v1/rocketfuel/collections/", "url_args": [], "notes": "Authentication is optional.", "request": {"params": [{"type": "int", "optional": false, "name": "category", "desc": "a category ID."}, {"type": "int", "optional": false, "name": "region", "desc": "a region ID."}, {"type": "int", "optional": false, "name": "carrier", "desc": "a carrier ID."}]}, "method": "get"}, {"url": "/api/v1/rocketfuel/collections/", "url_args": [], "notes": "Authentication is required.", "request": {"params": [{"type": "int|null", "optional": false, "name": "collection_type", "desc": "the type of collection to create."}, {"type": "string", "optional": false, "name": "name", "desc": "the name of the collection."}, {"type": "string", "optional": false, "name": "description", "desc": "a description of the collection."}, {"optional": false, "name": "category", "desc": "the ID of the category to attach this collection to. Defaults to ``null``."}, {"type": "int|null", "optional": false, "name": "region", "desc": "the ID of the region to attach this collection to. Defaults to ``null``."}, {"type": "int|null", "optional": false, "name": "carrier", "desc": "the ID of the carrier to attach this collection to. Defaults to ``null``."}, {"type": "string", "optional": false, "name": "author", "desc": "the author of the collection."}]}, "method": "post"}, {"url": "/api/v1/rocketfuel/collections/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "notes": "Authentication is optional.", "method": "get"}, {"url": "/api/v1/rocketfuel/collections/(int:id)/", "notes": "Authentication is required.", "request": {"params": [{"type": "int|null", "optional": false, "name": "collection_type", "desc": "the type of the collection."}, {"type": "string", "optional": false, "name": "name", "desc": "the name of the collection."}, {"type": "string", "optional": false, "name": "description", "desc": "a description of the collection."}, {"optional": false, "name": "category", "desc": "the ID of the category to attach this collection to."}, {"type": "int|null", "optional": false, "name": "region", "desc": "the ID of the region to attach this collection to."}, {"type": "int|null", "optional": false, "name": "carrier", "desc": "the ID of the carrier to attach this collection to."}, {"type": "string", "optional": false, "name": "author", "desc": "the author of the collection."}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "patch"}, {"url": "/api/v1/rocketfuel/collections/(int:id)/add_app/", "notes": "Authentication is required.", "request": {"params": [{"type": "int", "optional": false, "name": "app", "desc": "the ID of the application to add to this collection."}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "post"}, {"url": "/api/v1/rocketfuel/collections/(int:id)/remove_app/", "notes": "Authentication is required.", "request": {"params": [{"type": "int", "optional": false, "name": "app", "desc": "the ID of the application to remove from this collection."}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "post"}, {"url": "/api/v1/rocketfuel/collections/(int:id)/reorder/", "notes": "Authentication is required.", "request": {"params": []}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "post"}]}, {"api_name": "search", "endpoints": [{"url": "/api/v1/apps/search/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "q", "desc": "The query string to search for."}, {"type": "int|string", "optional": false, "name": "cat", "desc": "The category slug or ID to filter by. Use the"}, {"type": "string", "optional": false, "name": "device", "desc": "Filters by supported device. One of 'desktop',"}, {"type": "string", "optional": false, "name": "dev", "desc": "Enables filtering by device profile if either"}, {"type": "string", "optional": false, "name": "pro", "desc": "A :ref:`feature profile <feature-profile-label>`"}, {"type": "string", "optional": false, "name": "premium_types", "desc": "Filters by whether the app is free or"}, {"type": "string", "optional": false, "name": "type", "desc": "Filters by type of add-on. One of 'app' or"}, {"type": "string", "optional": false, "name": "app_type", "desc": "Filters by type of web app. One of 'hosted' or"}, {"type": "string", "optional": false, "name": "manifest_url", "desc": "Filters by manifest URL. Requires an"}, {"type": "string", "optional": false, "name": "sort", "desc": "The fields to sort by. One or more of 'downloads', 'rating',"}]}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of"}]}}, {"url": " /api/v1/fireplace/search/featured/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of"}, {"type": "array", "optional": false, "name": "featured", "desc": "A list of :ref:`apps <app-response-label>` featured"}]}}]}, {"api_name": "site", "endpoints": [{"url": "/api/v1/apps/category/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`categories <category-response-label>`."}]}}, {"url": "/api/v1/apps/category/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": []}}, {"url": "/api/v1/services/carrier/", "url_args": [], "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`carriers <carrier-response-label>`."}]}}, {"url": "/api/v1/services/carrier/<slug>/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": []}}, {"url": "/api/v1/services/region/", "url_args": [], "method": "get", "response": {"params": [{"type": "object", "optional": false, "name": "meta", "desc": ":ref:`meta-response-label`."}, {"type": "array", "optional": false, "name": "objects", "desc": "A :ref:`listing <objects-response-label>` of :ref:`regions <region-response-label>`."}]}}, {"url": "/api/v1/services/region/<slug>/", "url_args": [], "request": {"params": []}, "method": "get", "response": {"params": []}}, {"url": "/api/v1/services/config/site/", "url_args": [], "method": "get", "response": {"params": [{"type": "string|null", "optional": false, "name": "version", "desc": "the git commit number of the deployment."}, {"type": "object", "optional": false, "name": "settings", "desc": "a subset of useful site settings."}, {"type": "object", "optional": false, "name": "flags", "desc": "a subset of useful runtime configuration settings."}]}}]}, {"api_name": "submission", "endpoints": [{"url": "/api/v1/apps/validation/", "url_args": [], "request": {"params": [{"type": "string", "optional": false, "name": "manifest", "desc": "URL to the manifest."}, {"type": "object", "optional": false, "name": "upload", "desc": "a dictionary containing the appropriate file data in the upload field."}, {"type": "string", "optional": false, "name": "upload.type", "desc": "the content type."}, {"type": "string", "optional": false, "name": "upload.name", "desc": "the file name."}, {"type": "string", "optional": false, "name": "upload.data", "desc": "the base 64 encoded data."}]}, "method": "post", "response": {"params": []}}, {"url": "/api/v1/apps/validation/(int:id)/", "url_args": [{"type": "int", "name": "id"}], "method": "get", "response": {"params": [{"type": "int", "optional": false, "name": "id", "desc": "the id of the validation."}, {"type": "boolean", "optional": false, "name": "processed", "desc": "if the validation has been processed. Hosted apps are"}, {"type": "boolean", "optional": false, "name": "valid", "desc": "if the validation passed."}, {"type": "string", "optional": false, "name": "validation", "desc": "the resulting validation messages if it failed."}]}}, {"url": "/api/v1/apps/app/", "notes": "This method is throttled at 10 requests/day.", "request": {"params": [{"type": "int", "optional": false, "name": "manifest", "desc": "the id of the validated manifest."}, {"type": "int", "optional": false, "name": "upload", "desc": "the id of the validated packaged app."}]}, "response": {"status": {"code": "201"}, "params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/apps/app/(int:id)/", "notes": "Requires authentication and a successfully created app.", "request": {"params": [{"type": "string", "optional": false, "name": "name", "desc": "the title of the app. Maximum length 127 characters."}, {"type": "string", "optional": false, "name": "summary", "desc": "the summary of the app. Maximum length 255 characters."}, {"type": "array", "optional": false, "name": "categories", "desc": "a list of the categories, at least two of the"}, {"type": "string", "optional": false, "name": "description", "desc": "long description. Some HTML supported."}, {"type": "string", "optional": false, "name": "privacy_policy", "desc": "your privacy policy. Some HTML supported."}, {"type": "string", "optional": false, "name": "homepage", "desc": "a URL to your apps homepage."}, {"type": "string", "optional": false, "name": "support_url", "desc": "a URL to your support homepage."}, {"type": "string", "optional": false, "name": "support_email", "desc": "the email address for support."}, {"type": "array", "optional": false, "name": "device_types", "desc": "a list of the device types at least one of:"}, {"type": "array", "optional": false, "name": "regions", "desc": "a list of regions this app should be"}, {"type": "string", "optional": false, "name": "premium_type", "desc": "One of `free`, `premium`,"}, {"type": "string", "optional": false, "name": "price", "desc": "The price for your app as a string, for example"}, {"type": "string", "optional": false, "name": "payment_account", "desc": "The path for the"}, {"type": "string", "optional": false, "name": "upsold", "desc": "The path to the free app resource that"}]}, "response": {"params": []}, "url_args": [{"type": "int", "name": "id"}], "method": "put"}, {"url": "/api/v1/apps/preview/?app=(int:app_id)", "notes": "There is currently a restriction of 5MB on file uploads through", "request": {"params": [{"type": "int", "optional": false, "name": "position", "desc": "the position of the preview on the app. We show the"}, {"type": "object", "optional": false, "name": "file", "desc": "a dictionary containing the appropriate file data in the upload field."}, {"type": "string", "optional": false, "name": "file.type", "desc": "the content type."}, {"type": "string", "optional": false, "name": "file.name", "desc": "the file name."}, {"type": "string", "optional": false, "name": "file.data", "desc": "the base 64 encoded data."}]}, "response": {"params": []}, "url_args": [], "method": "post"}, {"url": "/api/v1/apps/preview/(int:preview_id)/", "url_args": [{"type": "int", "name": "preview_id"}], "method": "get", "response": {"params": []}}, {"url": "/api/v1/apps/preview/(int:preview_id)/", "url_args": [{"type": "int", "name": "preview_id"}], "notes": "Requires authentication and a successfully created app.", "method": "delete", "response": {"params": []}}, {"url": "/api/v1/apps/status/(int:app_id)/", "url_args": [{"type": "int", "name": "app_id"}], "request": {"params": [{"type": "string", "optional": false, "name": "status", "desc": "a status you'd like to move the app to (see below)."}, {"type": "boolean", "optional": false, "name": "disabled_by_user", "desc": "Whether the app is disabled or not."}]}, "method": "patch", "response": {"params": []}}]}]}